/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Encounter;
import model.EncounterHistory;
import model.Person;
import model.System;
import model.VitalSigns;
/**
 *
 * @author sirip
 */
public class EncounterHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EncounterHistoryJPanel
     */
    private JPanel displayJPanel;
    private System system;
    private Person person;
    
    public EncounterHistoryJPanel(JPanel displayJPanel, System system, Person person) {
        this.displayJPanel = displayJPanel;
        this.system=system;
        this.person=person;
        initComponents();
        populateTable();
    }
    
    public void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) tblEncounterHistory.getModel();
        model.setRowCount(0);
        
        EncounterHistory encounterHistory = person.getPatient().getEncounterHistory();
        ArrayList<Encounter> encounters = encounterHistory.getEncounterHistory();
        
        for(Encounter encounter:encounters) {
            
            Object[] row = new Object[9];
            row[0] = encounter.getVitalSigns();
            row[1] = encounter.getVitalSigns().getPulse();
            row[2] = encounter.getVitalSigns().getSbp();
            row[3] = encounter.getVitalSigns().getDbp();
            row[4] = encounter.getVitalSigns().getRespirationRate();
            row[5] = encounter.getVitalSigns().getSpo2();
            row[6] = encounter.getVitalSigns().getBmi();
            row[7] = encounter.getVitalSigns().getCreatedOn();
            row[8] = encounter.getVitalSigns().getUpdatedOn();
            
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEncounterHistory = new javax.swing.JTable();
        lblHeadingEncounterHistory = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnViewUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        tblEncounterHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Temperature", "Pulse", "Systolic BP", "Diastolic BP", "Respiration Rate", "SpO2", "BMI", "Created On", "Updated On"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEncounterHistory);

        lblHeadingEncounterHistory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblHeadingEncounterHistory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeadingEncounterHistory.setText("Patient Encounter Vital Signs");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnViewUpdate.setText("View/Update");
        btnViewUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92)
                        .addComponent(lblHeadingEncounterHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 844, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(313, 313, 313)
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnViewUpdate)
                        .addGap(27, 27, 27)
                        .addComponent(btnDelete)))
                .addGap(63, 63, 63))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHeadingEncounterHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJButton))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnViewUpdate)
                    .addComponent(btnDelete))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedIndex  = tblEncounterHistory.getSelectedRow();
        if(selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to Delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblEncounterHistory.getModel();
        
        EncounterHistory encounterHistory = person.getPatient().getEncounterHistory();
        ArrayList<Encounter> encounters = encounterHistory.getEncounterHistory();
        encounters.remove(selectedIndex);
        refreshView();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        displayJPanel.remove(this);
        CardLayout cardLayout =  (CardLayout) displayJPanel.getLayout();
        cardLayout.previous(displayJPanel);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void btnViewUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewUpdateActionPerformed
        // TODO add your handling code here:
        int selectedIndex  = tblEncounterHistory.getSelectedRow();
        if(selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to View/Update");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblEncounterHistory.getModel();
        VitalSigns vitalSignsToUpdate = (VitalSigns) model.getValueAt(selectedIndex, 0);
        navigateToVitalSignView(vitalSignsToUpdate);
    }//GEN-LAST:event_btnViewUpdateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        VitalSignsAddJPanel vitalSignsAddJPanel = new VitalSignsAddJPanel(displayJPanel, system, person);
        displayJPanel.add("AddVitalSigns", vitalSignsAddJPanel);
        CardLayout cardLayout = (CardLayout) displayJPanel.getLayout();
        cardLayout.next(displayJPanel);
    }//GEN-LAST:event_btnAddActionPerformed
    
    private void navigateToVitalSignView(VitalSigns vitalSigns) {
        
        VitalSignsUpdateJPanel vitalSignsJPanel = new VitalSignsUpdateJPanel(displayJPanel, system, vitalSigns);
        displayJPanel.add("ViewVitalSigns",vitalSignsJPanel);
        CardLayout cardLayout = (CardLayout) displayJPanel.getLayout();
        cardLayout.next(displayJPanel);
    }
    
    private void refreshView() {
        
        tblEncounterHistory.setRowSelectionInterval(0,0);
        populateTable();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnViewUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHeadingEncounterHistory;
    private javax.swing.JTable tblEncounterHistory;
    // End of variables declaration//GEN-END:variables
}
