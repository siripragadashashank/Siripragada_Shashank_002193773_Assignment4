/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.Community;
import model.System;

/**
 *
 * @author sirip
 */
public class CommunityJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CommunityJPanel
     */
    private System system;
    private JPanel displayJPanel;
    private String selectedCity;
    private City city;
    
    public CommunityJPanel(JPanel displayJPanel, System system, String selectedCity) {
        
        this.displayJPanel=displayJPanel;
        this.system=system;
        this.selectedCity=selectedCity;
        initComponents();
        populateTable();
    }
    public void populateTable() {
        
        DefaultTableModel model = (DefaultTableModel) communityJTable.getModel();
        model.setRowCount(0);
        
        for(City city:system.getCities()) {
            if(city.getCityName().equalsIgnoreCase(selectedCity)){
                this.city=city;
                for(Community community:city.getCommunities()){
                    Object[] row = new Object[4];
                    row[0]=community;
                    row[1]=formatDate(community.getLastUpdatedDate());
                    
                    model.addRow(row);
                }
            }
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        communityJTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        goJButton = new javax.swing.JButton();
        deleteJButton = new javax.swing.JButton();
        viewJButton = new javax.swing.JButton();
        addJButton = new javax.swing.JButton();
        communitiesJLabel = new javax.swing.JLabel();

        communityJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Community Name", "Updated On"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(communityJTable);

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        goJButton.setText("Next");
        goJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goJButtonActionPerformed(evt);
            }
        });

        deleteJButton.setText("Delete");
        deleteJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteJButtonActionPerformed(evt);
            }
        });

        viewJButton.setText("View/Update");
        viewJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewJButtonActionPerformed(evt);
            }
        });

        addJButton.setText("Add");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        communitiesJLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        communitiesJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        communitiesJLabel.setText("Communities");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(communitiesJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(123, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(viewJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteJButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(goJButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(communitiesJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backJButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(goJButton)
                    .addComponent(deleteJButton)
                    .addComponent(viewJButton)
                    .addComponent(addJButton))
                .addContainerGap(173, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        displayJPanel.remove(this);
        CardLayout cardLayout =  (CardLayout) displayJPanel.getLayout();
        cardLayout.previous(displayJPanel);
    }//GEN-LAST:event_backJButtonActionPerformed

    private String formatDate(Date date){
        String pattern = "yyyy-MM-dd HH:mm:ss";
        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);
        return simpleDateFormat.format(date);
    }
    
    private void goJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = communityJTable.getSelectedRow();
        if(selectedRow <0){
            JOptionPane.showMessageDialog(this, "Please Select any Community to View the Houses");
            return;
        }

        showHousesInCommunity(selectedRow);
    }//GEN-LAST:event_goJButtonActionPerformed

    private void deleteJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteJButtonActionPerformed
        // TODO add your handling code here:

        int selectedRow = communityJTable.getSelectedRow();
        if(selectedRow <0){
            JOptionPane.showMessageDialog(this, "Please Select any Community to View the Houses");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) communityJTable.getModel();
        Community community = (Community) model.getValueAt(selectedRow, 0);

        List<Person> personsToRemove = new ArrayList<>();
        List<House> houses = community.getHouses();
        for(House house:houses) {
            personsToRemove.addAll(house.getPersons());
        }
        List<Patient> patientsToRemove = new ArrayList<>();
        for(Person person:personsToRemove) {
            patientsToRemove.add(person.getPatient());
        }

        system.getPersonDirectory().getPersons().removeAll(personsToRemove);
        system.getPatientDirectory().getPatients().removeAll(patientsToRemove);

        city.getCommunities().remove(community);

        JOptionPane.showMessageDialog(this, "Successfully deleted the Community");
        populateTable();
    }//GEN-LAST:event_deleteJButtonActionPerformed

    private void viewJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewJButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = communityJTable.getSelectedRow();
        if(selectedRow <0){
            JOptionPane.showMessageDialog(this, "Please Select any Community to View the Houses");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) communityJTable.getModel();
        Community community = (Community) model.getValueAt(selectedRow, 0);
        ViewCommunityJPanel viewCommunityJPanel = new ViewCommunityJPanel(displayJPanel, system, community);
        displayJPanel.add("ViewCommunityPanel", viewCommunityJPanel);
        CardLayout cardLayout = (CardLayout) displayJPanel.getLayout();
        cardLayout.next(displayJPanel);
    }//GEN-LAST:event_viewJButtonActionPerformed

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed
        // TODO add your handling code here:
        AddCommunityJPanel addCommunityJPanel = new AddCommunityJPanel(displayJPanel, city);
        displayJPanel.add("AddCommunityScreen", addCommunityJPanel);
        CardLayout cardLayout = (CardLayout) displayJPanel.getLayout();
        cardLayout.next(displayJPanel);
    }//GEN-LAST:event_addJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel communitiesJLabel;
    private javax.swing.JTable communityJTable;
    private javax.swing.JButton deleteJButton;
    private javax.swing.JButton goJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewJButton;
    // End of variables declaration//GEN-END:variables
}
